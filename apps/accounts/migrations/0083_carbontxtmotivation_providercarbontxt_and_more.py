# Generated by Django 5.0.9 on 2025-08-08 10:21

import apps.accounts.validators
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import taggit.managers
from carbon_txt.finders import FileFinder
from django.conf import settings
from django.db import migrations, models
from apps.accounts.models import ProviderCarbonTxt


def set_carbon_txt_urls(*args, **kwargs):
    finder = FileFinder()
    for carbon_txt in ProviderCarbonTxt.objects.all():
        carbon_txt.carbon_txt_url = finder.resolve_domain(carbon_txt.domain).uri
        carbon_txt.save()

class Migration(migrations.Migration):

    dependencies = [
        ("accounts", "0082_alter_datacenter_is_listed"),
    ]

    operations = [
        migrations.CreateModel(
            name="CarbonTxtMotivation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, unique=True, verbose_name="name"),
                ),
                (
                    "slug",
                    models.SlugField(
                        allow_unicode=True,
                        max_length=100,
                        unique=True,
                        verbose_name="slug",
                    ),
                ),
                (
                    "show_description_field",
                    models.BooleanField(
                        default=False,
                        verbose_name="Show the free-text description field when selected.",
                    ),
                ),
            ],
            options={
                "verbose_name": "Carbon.txt motivating issue",
                "verbose_name_plural": "Carbon.txt motivating issues",
            },
        ),
        migrations.CreateModel(
            name="ProviderCarbonTxt",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "domain",
                    models.CharField(
                        max_length=255,
                        unique=True,
                        validators=[apps.accounts.validators.DomainNameValidator()],
                    ),
                ),
                ("carbon_txt_url", models.URLField(max_length=512, unique=True)),
                ("is_delegation_set", models.BooleanField(default=False)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "provider",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="carbon_txt",
                        to="accounts.hostingprovider",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProviderCarbonTxtMotivation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_object",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.hostingprovider",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_items",
                        to="accounts.carbontxtmotivation",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="hostingprovider",
            name="carbon_txt_motivations",
            field=taggit.managers.TaggableManager(
                blank=True,
                help_text="A comma-separated list of tags.",
                through="accounts.ProviderCarbonTxtMotivation",
                to="accounts.CarbonTxtMotivation",
                verbose_name="Motivations for using carbon.txt",
            ),
        ),
        migrations.RunSQL(
            """

                INSERT INTO accounts_providercarbontxt
                (created, modified, domain, created_by_id, provider_id, is_delegation_set, carbon_txt_url)
                SELECT
                    created, modified, domain, created_by_id, provider_id,
                    TRUE as is_delegation_set,
                    CONCAT('https://', domain, '/carbon.txt') as carbon_txt_url
                FROM accounts_linkeddomain
                WHERE is_primary IS TRUE

            """,
        ),
        migrations.RunPython(set_carbon_txt_urls),
        migrations.DeleteModel(
            name="LinkedDomain",
        ),
    ]
