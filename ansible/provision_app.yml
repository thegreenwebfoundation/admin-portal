---
- name: Provision the TGWF django web-app server
  hosts:
    # - app_servers
    # - app1.thegreenwebfoundation.org
    # - app2.thegreenwebfoundation.org
    # - app3.thegreenwebfoundation.org
    # - app4.thegreenwebfoundation.org

  remote_user: "deploy"
  become: false

  vars:
    # set up our deployment directories to be compatible with the project f500
    # deployment role
    create_deployment_dirs: true
    # set this to true will fetch the system requirements like python, mariadb, redis,
    # and so on
    install_system_reqs: true
    # decide about installing a recent version of node
    install_node: true
    install_uv: true
    # run an update of our front dependencies as part of the deploy. This is better
    # handled in source control, but if the front end will not build in deployment, this
    # is a workaround
    update_front_end_deps: true

    project_git_repo: "git@github.com:thegreenwebfoundation/admin-portal.git"
    project_deploy_strategy: git
    project_version: "{{ project_deploy_branch }}"
    project_local_path: "../"
    project_unwanted_items:
      - .git
    project_finalize: true

    # set these to decide about setting up a folder structure as if we are deploying
    deploy_project: true
    update_symlinks: true

  tasks:
    - name: Set up most recent timestamps directories
      ansible.builtin.include_tasks: "_create_deployment_directories.yml"
      when: create_deployment_dirs is true

    - name: Run the deploy steps to check out the project repo
      ansible.builtin.include_role:
        name: f500.project_deploy
      when: deploy_project is defined and deploy_project is true

    - name: Link .env to shared directory
      ansible.builtin.file:
        src: "{{ project_root }}/shared/.env"
        dest: "{{ project_root }}/current/.env"
        state: link
      when: update_symlinks is true

    - name: Link ./media to shared ./media directory
      ansible.builtin.file:
        src: "{{ project_root }}/shared/media"
        dest: "{{ project_root }}/current/media"
        state: link
      when: update_symlinks is true

    - name: Link ./data to shared ./data directory
      ansible.builtin.file:
        src: "{{ project_root }}/shared/data"
        dest: "{{ project_root }}/current/data"
        state: link
      when: update_symlinks is true

    - name: Link to .aws.credentials in shared directory
      ansible.builtin.file:
        src: "{{ project_root }}/shared/.aws.credentials"
        dest: "{{ project_root }}/current/.aws.credentials"
        state: link
      when: update_symlinks is true

    - name: Install all system dependencies
      ansible.builtin.include_tasks: "_add_system_dependencies.yml"
      when: install_system_reqs is true
      tags: [python, fnm-install, uv-install]

    - name: Install all deploy dependencies
      ansible.builtin.include_tasks: "_install_deploy_dependencies.yml"
      when: install_system_reqs is true
