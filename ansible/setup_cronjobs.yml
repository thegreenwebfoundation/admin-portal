---
- name: Set up regular django cronjobs in our app server pool
  gather_facts: false

  hosts:
    # there is nothing special about app4 versus the
    # other app serves. We just needed to pick one machine
    # to run these cron jobs on
    - app1.thegreenwebfoundation.org

  remote_user: deploy
  tasks:
    - name: Set up backup script directory
      ansible.builtin.file:
        path: /home/deploy/cronjobs
        state: directory
        owner: deploy
        group: deploy
      become: true
      tags: [ip-importers]

    - name: Upload ip import script
      ansible.builtin.template:
        src: import_ips_for_large_providers.sh.j2
        dest: /home/deploy/cronjobs/import_ips_for_large_providers.sh
        mode: "0755"
      tags: [ip-importers]

    - name: Upload expired domain pruning script
      ansible.builtin.template:
        src: clear_expired_domains.sh.j2
        dest: /home/deploy/cronjobs/clear_expired_domains.sh
        mode: "0755"
      tags: [green-domains-exporter]

    - name: Upload green domain export script
      ansible.builtin.template:
        src: export_green_domains.sh.j2
        dest: /home/deploy/cronjobs/export_green_domains.sh
        mode: "0755"
      tags: [green-domains-exporter]

    - name: Upload carbon.txt cache sweep script
      ansible.builtin.template:
        src: sweep_carbon_txt_domain_cache.sh.j2
        dest: /home/deploy/cronjobs/sweep_carbon_txt_domain_cache.sh
        mode: "0755"
      tags: [green-domains-exporter]

    - name: Ensure log files exist for /home/deploy/cronjobs
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: touch
        owner: deploy
        group: deploy
      become: true
      loop:
        - {
            name: "ip import STDOUT",
            path: "/var/log/import_ips_for_large_providers.log",
          }
        - {
            name: "ip import STDERR",
            path: "/var/log/import_ips_for_large_providers.error.log",
          }
        - {
            name: "green domains export STDOUT",
            path: "/var/log/export_green_domains.log",
          }
        - {
            name: "green domains export STDERR",
            path: "/var/log/export_green_domains.error.log",
          }
        - {
            name: "clear expired domains STDOUT",
            path: "/var/log/clear_expired_domains.log",
          }
        - {
            name: "clear expired domains STDERR",
            path: "/var/log/clear_expired_domains.error.log",
          }
        - {
            name: "sweep carbon.txt domain cache STDOUT",
            path: "/var/log/sweep_carbon_txt_domain_cache.log",
          }
        - {
            name: "sweep carbon.txt domain cache STDERR",
            path: "/var/log/sweep_carbon_txt_domain_cach.error.log",
          }
      tags: [ip-importers, green-domains-exporter]

    - name: Ensure job to run IP hyperscaler importers is present
      ansible.builtin.cron:
        name: "every Wednesday at 4:30 run our importers"
        state: present
        weekday: "WED"
        hour: "4"
        minute: "30"
        user: deploy
        job: >
          bash /home/deploy/cronjobs/import_ips_for_large_providers.sh
          >> /var/log/import_ips_for_large_providers.log
          2>> /var/log/import_ips_for_large_providers.error.log
      tags: [crontab]


    # Note: when changing the schedule here, be sure to update the sentry configuration
    # in apps/greencheck/management/commands/clear_expired_greendomains.py to match,
    # otherwise we risk getting spurious error alerts.
    - name: Ensure job to clear expired domains is present
      ansible.builtin.cron:
        name: "every day at 1:00 clear all expired domains"
        state: present
        weekday: "*"
        hour: "1"
        minute: "00"
        user: deploy
        job: >
          bash /home/deploy/cronjobs/clear_expired_domains.sh
          >> /var/log/clear_expired_domains.log
          2>> /var/log/clear_expired_domains.error.log
      tags: [crontab]

    # Note: when changing the schedule here, be sure to update the sentry configuration
    # in apps/greencheck/management/commands/dump_green_domains.py to match,
    # otherwise we risk getting spurious error alerts.
    - name: Ensure job to export green domains is present
      ansible.builtin.cron:
        name: "every day at 1:30 export our green domains table"
        state: present
        weekday: "*"
        hour: "1"
        minute: "30"
        user: deploy
        job: >
          bash /home/deploy/cronjobs/export_green_domains.sh
          >> /var/log/export_green_domains.log
          2>> /var/log/export_green_domains.error.log
      tags: [crontab]

      # Note: when changing the schedule here, be sure to update the sentry configuration
    # in apps/accounts/management/commands/sweep_carbon_txt_domain_cache.py to match,
    # otherwise we risk getting spurious error alerts.
    - name: Ensure job to sweep carbon.txt domain cache
      ansible.builtin.cron:
        name: "hour at ten past the hour  sweep the carbon.txt cache"
        state: present
        weekday: "*"
        hour: "*"
        minute: "10"
        user: deploy
        job: >
          bash /home/deploy/cronjobs/sweep_carbon_txt_domain_cache.sh
          >> /var/log/sweep_carbon_txt_domain_cache.log
          2>> /var/log/sweep_carbon_txt_domain_cache.error.log
      tags: [crontab]
