name: Trigger test run

on:
  push:
    # either only run on pushes to master and staging branches
    # OR a PR. This avoids needless double CI runs
    # https://adamj.eu/tech/2025/05/14/github-actions-avoid-simple-on/
    branches:
      - master
      - staging
    paths-ignore:
      - "**.md"
      - ".gitignore"
  # make our tests run when we have external PRs
  # WARNING - ONLY use pull_request_target when explicitly checking user permissions as part of the workflow run.
  pull_request_target:
    paths-ignore:
      - "**.md"
      - ".gitignore"

defaults:
  run:
    working-directory: ./

jobs:
  # First, work out whether the user that triggered the run is a collaborator or not.
  # WARNING: without this check, we should NOT use pull_request_target as a trigger above,
  # and revert to pull_request, as pull_request_target is insecure without an explicit
  # permissions check.
  determine-user-role:
      runs-on: ubuntu-latest
      outputs:
        is-collaborator: ${{ steps.check-collaborator.outputs.is-collaborator }}
      steps:
        - name: Check if actor is a collaborator
          id: check-collaborator
          run: |
            if [[ "${{ github.event_name }}" == "push" ]]; then
              # direct pushes can only be made by collaborators. We can run the tests directly
              echo "is-collaborator=true" >> $GITHUB_OUTPUT
            elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
              assoc="${{ github.event.pull_request.author_association }}"
              if [[ "$assoc" == "COLLABORATOR" || "$assoc" == "OWNER" ]]; then
                # PRs from collaborators and owners run the tests directly
                echo "is-collaborator=true" >> $GITHUB_OUTPUT
              else
                #  PRs from other users wait for approval before running
                echo "is-collaborator=false" >> $GITHUB_OUTPUT
              fi
            else
              # Some other trigger we didn't expect - don't run tests automatically.
              echo "is-collaborator=false" >> $GITHUB_OUTPUT
            fi

  run-tests-collaborator:
    # Triggering user is collaborator: Run the tests in an environment which doesn't require approval
    needs: determine-user-role
    if: needs.determine-user-role.outputs.is-collaborator == 'true'
    uses: ./.github/workflows/run-tests-inner.yml
    with:
      environment: test
    secrets: inherit

  run-tests-external:
    # Triggering user is not collaborator: Run the tests in an environment which does require approval
    needs: determine-user-role
    if: needs.determine-user-role.outputs.is-collaborator == 'false'
    uses: ./.github/workflows/run-tests-inner.yml
    with:
      environment: test-external
    secrets: inherit
